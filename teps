[0;31mSignature:[0m
[0mnpt[0m[0;34m.[0m[0massert_almost_equal[0m[0;34m([0m[0;34m[0m
[0;34m[0m    [0mactual[0m[0;34m,[0m[0;34m[0m
[0;34m[0m    [0mdesired[0m[0;34m,[0m[0;34m[0m
[0;34m[0m    [0mdecimal[0m[0;34m=[0m[0;36m7[0m[0;34m,[0m[0;34m[0m
[0;34m[0m    [0merr_msg[0m[0;34m=[0m[0;34m''[0m[0;34m,[0m[0;34m[0m
[0;34m[0m    [0mverbose[0m[0;34m=[0m[0;32mTrue[0m[0;34m,[0m[0;34m[0m
[0;34m[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;31mDocstring:[0m
Raises an AssertionError if two items are not equal up to desired
precision.

.. note:: It is recommended to use one of `assert_allclose`,
          `assert_array_almost_equal_nulp` or `assert_array_max_ulp`
          instead of this function for more consistent floating point
          comparisons.

The test verifies that the elements of ``actual`` and ``desired`` satisfy.

    ``abs(desired-actual) < 1.5 * 10**(-decimal)``

That is a looser test than originally documented, but agrees with what the
actual implementation in `assert_array_almost_equal` did up to rounding
vagaries. An exception is raised at conflicting values. For ndarrays this
delegates to assert_array_almost_equal

Parameters
----------
actual : array_like
    The object to check.
desired : array_like
    The expected object.
decimal : int, optional
    Desired precision, default is 7.
err_msg : str, optional
    The error message to be printed in case of failure.
verbose : bool, optional
    If True, the conflicting values are appended to the error message.

Raises
------
AssertionError
  If actual and desired are not equal up to specified precision.

See Also
--------
assert_allclose: Compare two array_like objects for equality with desired
                 relative and/or absolute precision.
assert_array_almost_equal_nulp, assert_array_max_ulp, assert_equal

Examples
--------
>>> import numpy.testing as npt
>>> npt.assert_almost_equal(2.3333333333333, 2.33333334)
>>> npt.assert_almost_equal(2.3333333333333, 2.33333334, decimal=10)
Traceback (most recent call last):
    ...
AssertionError:
Arrays are not almost equal to 10 decimals
 ACTUAL: 2.3333333333333
 DESIRED: 2.33333334

>>> npt.assert_almost_equal(np.array([1.0,2.3333333333333]),
...                         np.array([1.0,2.33333334]), decimal=9)
Traceback (most recent call last):
    ...
AssertionError:
Arrays are not almost equal to 9 decimals
<BLANKLINE>
Mismatched elements: 1 / 2 (50%)
Max absolute difference: 6.66669964e-09
Max relative difference: 2.85715698e-09
 x: array([1.         , 2.333333333])
 y: array([1.        , 2.33333334])
[0;31mFile:[0m      ~/anaconda3/lib/python3.7/site-packages/numpy/testing/_private/utils.py
[0;31mType:[0m      function
